"use strict";(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[6229],{9751:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e={key:"v-55d54b12",path:"/languages/Terraform.html",title:"Terraform",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Syntax highlighting",slug:"syntax-highlighting",children:[]},{level:2,title:"Supported language servers",slug:"supported-language-servers",children:[]},{level:2,title:"Supported formatters",slug:"supported-formatters",children:[]}],filePathRelative:"languages/Terraform.md",git:{updatedTime:1639987467e3,contributors:[{name:"Uzaaft",email:"48220549+Uzaaft@users.noreply.github.com",commits:1}]}}},1514:(a,n,s)=>{s.r(n),s.d(n,{default:()=>r});const e=(0,s(6252).uE)('<h1 id="terraform" tabindex="-1"><a class="header-anchor" href="#terraform" aria-hidden="true">#</a> Terraform</h1><h2 id="syntax-highlighting" tabindex="-1"><a class="header-anchor" href="#syntax-highlighting" aria-hidden="true">#</a> Syntax highlighting</h2><p>First, within LunarVim run the following:</p><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>TSInstall hcl\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>To enable Syntax Highlighting for <code>.tf</code> files as well, just add this to your <code>config.lua</code>:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token keyword">local</span> parser_configs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;nvim-treesitter.parsers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get_parser_configs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nparser_configs<span class="token punctuation">.</span>hcl <span class="token operator">=</span> <span class="token punctuation">{</span>\n  filetype <span class="token operator">=</span> <span class="token string">&quot;hcl&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;terraform&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="supported-language-servers" tabindex="-1"><a class="header-anchor" href="#supported-language-servers" aria-hidden="true">#</a> Supported language servers</h2><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>terraform <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;terraform&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;terraformls&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="supported-formatters" tabindex="-1"><a class="header-anchor" href="#supported-formatters" aria-hidden="true">#</a> Supported formatters</h2><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>terraform <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;terraform&quot;</span><span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',10),t={},r=(0,s(3744).Z)(t,[["render",function(a,n){return e}]])},3744:(a,n)=>{n.Z=(a,n)=>{const s=a.__vccOpts||a;for(const[a,e]of n)s[a]=e;return s}}}]);